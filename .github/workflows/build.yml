name: Compile Qt project

on: push

env:
  BUILD_TYPE: Release
  QT_VERSION: '6.8.3'
  PROJECT_NAME: scu_net_auto_login
  EXECUTABLE_NAME: scu_net_auto_login

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: windows-latest
            qt_host: windows
            arch: win64_msvc2022_64
            cmake_generator: 'Visual Studio 17 2022'
          # - os: windows-11-arm
          #   qt_host: windows_arm64
          #   arch: win64_msvc2022_arm64
          #   cmake_generator: 'Visual Studio 17 2022'
          - os: ubuntu-latest
            qt_host: linux
            arch: linux_gcc_64
            cmake_generator: 'Ninja'
          - os: ubuntu-24.04-arm
            qt_host: linux_arm64
            arch: linux_gcc_arm64
            cmake_generator: 'Ninja'
          - os: macos-latest
            qt_host: mac
            arch: clang_64
            cmake_generator: 'Ninja'

    steps:
    - uses: actions/checkout@v4

    - name: Get CMake
      uses: lukka/get-cmake@latest

    - name: Install Qt
      uses: Kidev/install-qt-action/action@v5 # temporary, for arm64, not supporting windows yet (TypeError: unsupported operand type(s) for |: 'type' and 'NoneType')
      with:
        cache: 'true'
        version: ${{ env.QT_VERSION }}
        host: ${{ matrix.qt_host }}
        target: 'desktop'
        arch: ${{ matrix.arch }}
        modules: 'qtwebsockets'

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/build -S . -G "${{ matrix.cmake_generator }}" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DEXECUTABLE_OUTPUT_PATH=${{github.workspace}}/build/bin

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build --config ${{ env.BUILD_TYPE }} --parallel

    - name: Package (Windows Only)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p release_package
        cp build/Release/${{ env.EXECUTABLE_NAME }}.exe release_package/
        windeployqt release_package/${{ env.EXECUTABLE_NAME }}.exe
      shell: pwsh

    - name: Compress (Windows Only)
      if: matrix.os == 'windows-latest'
      run: |
        7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on ${{ env.PROJECT_NAME }}_${{ matrix.qt_host }}_${{ matrix.arch }}.7z release_package
      shell: bash

    - name: Upload executable (Windows Only)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.EXECUTABLE_NAME }}.exe
        path: build/Release/${{ env.EXECUTABLE_NAME }}.exe
        compression-level: 0

    - name: Upload build artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}_${{ matrix.qt_host }}_${{ matrix.arch }}.7z
        path: ${{ env.PROJECT_NAME }}_${{ matrix.qt_host }}_${{ matrix.arch }}.7z
        compression-level: 0

    - name: Release Package (Windows Only)
      if: matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{github.workspace}}/${{ env.PROJECT_NAME }}_${{ matrix.qt_host }}_${{ matrix.arch }}.7z
          ${{github.workspace}}/build/Release/${{ env.EXECUTABLE_NAME }}.exe
        generate_release_notes: true

    - name: Compress (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=32m -ms=on ${{ env.PROJECT_NAME }}_${{ matrix.qt_host }}_${{ matrix.arch }}.7z build/bin

    - name: Upload build artifacts (Linux/macOS)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}_${{ matrix.qt_host }}_${{ matrix.arch }}
        path: ${{ env.PROJECT_NAME }}_${{ matrix.qt_host }}_${{ matrix.arch }}.7z
        compression-level: 0

    - name: Release Package (Linux/macOS)
      if: matrix.os != 'windows-latest' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ${{github.workspace}}/${{ env.PROJECT_NAME }}_${{ matrix.qt_host }}_${{ matrix.arch }}.7z
        generate_release_notes: true